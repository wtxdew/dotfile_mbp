#
#
#

#@ Open other applications
cmd - return  : open -n /Applications/Alacritty.app
# cmd - m       : yabai -m window --insert stack && mpv (pbpaste)
cmd - m       : mpv (pbpaste)

#@ Refresh yabai
alt + shift - q:bash -c 'launchctl kickstart -k "gui/$UID/homebrew.mxcl.yabai"'
alt + shift - f12 : bash -c 'brew services restart sketchybar'

#@ Resize window (iTerm style)
cmd + ctrl - right : yabai -m window east --resize left:20:0  \
                  || yabai -m window      --resize left:20:0
cmd + ctrl - left  : yabai -m window east --resize left:-20:0 \
                  || yabai -m window      --resize left:-20:0
cmd + ctrl - up    : yabai -m window south --resize top:0:-20 \
                  || yabai -m window       --resize top:0:-20
cmd + ctrl - down  : yabai -m window south --resize top:0:20  \
                  || yabai -m window       --resize top:0:20

#@ Focus space
alt - tab : yabai -m space --focus recent

#@ Change layout of current space
alt - t      : yabai -m space --layout bsp   && $HOME/.local/mybin/refresh_xbar
alt - f      : yabai -m space --layout float && $HOME/.local/mybin/refresh_xbar
alt - m      : yabai -m space --layout stack && $HOME/.local/mybin/refresh_xbar
alt - space  : $HOME/.local/mybin/toggle_yabai_layout \
            && $HOME/.local/mybin/refresh_xbar

#@ Focus window (dwm style)
alt - j : $HOME/.local/mybin/focus_yabai_target next
alt - k : $HOME/.local/mybin/focus_yabai_target prev

## ::togglefloating({0}) 
# alt + shift - space : yabai -m window --toggle float 
## ::togglefloating({0}) but placed in centre
alt + shift - space : yabai -m window --toggle float &&\
                      test (yabai -m query --windows --window | jq -r '."is-floating"') = true && \
                      yabai -m window --grid 4:4:1:1:2:2 
                      # yabai -m window --toggle topmost
                      # test (yabai -m query --windows --window | jq -r '."is-topmost"') = true;or yabai -m window --toggle topmost

## TODO::view({.ui=~0})
#@ view all window(client) of all space(tag) on one space 
#* dont know how to achieve.

## TODO::toggleview({.ui = 1 << TAG})
#@ same as view({.ui=0}) but can choice tag.
#* not idea 

## ::tag({.ui=~0})
alt + shift - 0 : yabai -m window --toggle sticky 
                  # yabai -m window --toggle topmost
                  # test (yabai -m query --windows --window | jq -r '."is-topmost"') = true;or yabai -m window --toggle topmost

## TODO::toggletag({.ui = 1 << TAG})
#@ tag window multipal tag. 
#* cant simply achieve

#** never try in dwm.
## TODO::focusmon({.i=-1})
## TODO::focusmon({.i=+1})
## TODO::tagmon({.i=-1})
## TODO::tagmon({.i=+1})

#** not really suitable for 'yabai'
## TODO::incnmaster({})
## TODO::zoom({0}) 


# ======================== yabai style config ==================================== 
# make floating window fill screen
alt + shift - up     : yabai -m window --grid 1:1:0:0:1:1
# make floating window fill left-half of screen
alt + shift - left   : yabai -m window --grid 1:2:0:0:1:1
# make floating window fill right-half of screen
alt + shift - right  : yabai -m window --grid 1:2:1:0:1:1
# reset floating window 
alt + shift - down   : yabai -m window --grid 4:4:1:1:2:2

# create desktop, follow focus - uses jq for parsing json (brew install jq)
alt + shift - n : yabai -m space --create && \
                yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index'|xargs yabai -m space --focus
                
# destroy desktop
# alt + shift - d : yabai -m space --destroy

# toggle desktop offset
alt - a : yabai -m space --toggle padding && yabai -m space --toggle gap
# toggle window fullscreen zoom
alt + shift - a : yabai -m window --toggle zoom-fullscreen
# toggle window native fullscreen
cmd - f11 : yabai -m window --toggle native-fullscreen
# toggle window topmost
alt + shift - t : yabai -m window --toggle topmost

# focus monitor
alt - 0x2B : yabai -m display --focus prev
alt - 0x2F : yabai -m display --focus next


# send window to monitor and follow focus
alt + shift - 0x2B : yabai -m window --display prev && yabai -m display --focus prev
alt + shift - 0x2F : yabai -m window --display next && yabai -m display --focus next

# Show Desktop or Hide all windows
# macos native support with (fn + h)
# cmd - d : yabai -m space --toggle show-desktop

.blacklist [
    "UTM"
    "Parallels"
    "wine64-preloader"
]

# TODO::
# focus on last/closest windows 


## ::view({.ui = 1 << TAG})
alt - 1 : yabai -m space --focus  1 
alt - 2 : yabai -m space --focus  2 
alt - 3 : yabai -m space --focus  3 
alt - 4 : yabai -m space --focus  4 
alt - 5 : yabai -m space --focus  5 
alt - 6 : yabai -m space --focus  6 
alt - 7 : yabai -m space --focus  7 
alt - 8 : yabai -m space --focus  8 
alt - 9 : yabai -m space --focus  9 

## ::tag({.ui = 1 << TAG}) && focus()  
alt + shift - 1 : yabai -m window --space  1 && yabai -m space --focus 1
alt + shift - 2 : yabai -m window --space  2 && yabai -m space --focus 2
alt + shift - 3 : yabai -m window --space  3 && yabai -m space --focus 3
alt + shift - 4 : yabai -m window --space  4 && yabai -m space --focus 4
alt + shift - 5 : yabai -m window --space  5 && yabai -m space --focus 5
alt + shift - 6 : yabai -m window --space  6 && yabai -m space --focus 6
alt + shift - 7 : yabai -m window --space  7 && yabai -m space --focus 7
alt + shift - 8 : yabai -m window --space  8 && yabai -m space --focus 8
alt + shift - 9 : yabai -m window --space  9 && yabai -m space --focus 9

# # move window
alt + ctrl - h : yabai -m window --warp west
alt + ctrl - j : yabai -m window --warp south
alt + ctrl - k : yabai -m window --warp north
alt + ctrl - l : yabai -m window --warp east

# swap window
alt + shift - h : yabai -m window --swap west
alt + shift - j : yabai -m window --swap south
alt + shift - k : yabai -m window --swap north
alt + shift - l : yabai -m window --swap east

# set insertion point in focused container
ctrl + shift - h : yabai -m window --insert west
ctrl + shift - j : yabai -m window --insert south
ctrl + shift - k : yabai -m window --insert north
ctrl + shift - l : yabai -m window --insert east
ctrl + shift - i : yabai -m window --insert stack


###############################################################################
# backup and restore config                                                   #
###############################################################################

# .load "function.fish"
# cmd - return  : /Applications/Kitty.app/Contents/MacOS/kitty --single-instance -d ~ &> /dev/null
# cmd - return  : /bin/bash /Users/wutong/.config/skhd/spawn-ssh.sh
# cmd - return  : open -n /Applications/Alacritty.app
# cmd - m       : open -na /Applications/mpv.app $(pbpaste) ### open mpv with url from clipboard

#@ iTerm style focus windows
# cmd - 0x1E : focus_yabai_target -s next
# cmd - 0x21 : focus_yabai_target -s prev
# cmd - 0x1E : yabai -m window --focus next || yabai -m window --focus first # cmd + ]
# cmd - 0x21 : yabai -m window --focus prev || yabai -m window --focus last  # cmd + [
# alt - z : yabai -m window --focus stack.prev
# alt - c : yabai -m window --focus stack.next

# ================================ old config =================================
# balance size of windows
# alt + shift - 0 : yabai -m space --balance

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
# shift + cmd - n : yabai -m space --create && \
#                   index="$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index')" && \
#                   yabai -m window --space "${index}" && \
#                   yabai -m space --focus "${index}"

# rotate tree
# alt - r : yabai -m space --rotate 90

# mirror tree y-axis
# alt - y : yabai -m space --mirror y-axis

# mirror tree x-axis
# alt - x : yabai -m space --mirror x-axis

# toggle window parent zoom
# alt - d : yabai -m window --toggle zoom-parent

# toggle window split type
# alt - e : yabai -m window --toggle split

# toggle topmost (keep above other windows)
# alt - o : yabai -m window --toggle topmost

# toggle picture-in-picture
# alt - p : yabai -m window --toggle border && \
#           yabai -m window --toggle pip

# alt - p : yabai -m window --toggle pip
